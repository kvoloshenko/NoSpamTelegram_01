import logging
from dotenv import load_dotenv
import os
from langchain_ollama import ChatOllama
from langchain_core.messages import HumanMessage

load_dotenv()

LOCAL_LLM = os.getenv('LOCAL_LLM')
print(f'LOCAL_LLM ={LOCAL_LLM }')

logger = logging.getLogger(__name__)

async def check_spam(topic: str) -> bool:


    prompt = f"""
    Ты — антиспам-фильтр Telegram. Отвечай строго SPAM или NOT_SPAM.  
    Метка SPAM ставится при малейших признаках «быстрых денег», если сообщение не подпадает под исключения.

    ==================================================
    🟥 КРИТЕРИИ СПАМА  
    (*достаточно ≥ 1 Core-триггера **и** ≥ 1 Secondary-триггера*)
    --------------------------------------------------
    **Core-триггеры (A–B, обязательна как минимум одна категория):**

    A. ДЕНЕЖНЫЕ ОБЕЩАНИЯ  
      • Чёткие суммы / проценты: «$150», «80% прибыли», «50/50»  
      • Обещания дохода даже без цифр: «гарантированный доход», «пассивно», «без вложений»  
      • Схемы: «модель X/Y», «партнёрка», «сопровождение», «без риска»

    B. ПРИЗЫВ К КОНТАКТУ / ДЕЙСТВИЮ  
      • «Напиши», «пиши», «пишите», «в личку», «в ЛС», «+ в чат»  
      • Прямые ссылки на контакт / ник / бота

    **Secondary-триггеры (C–D, необходим хотя бы один):**

    C. ЛИМИТИРОВАНИЕ  
      • «Только N человек», «2 места», «последние места»  
      • Срочность: «до конца дня», «быстрый старт», «сегодня»

    D. МАНИПУЛЯЦИИ / ПСЕВДО-ЛЕГАЛЬНОСТЬ  
      • «Ничего не теряете», «без обязательств»  
      • «Всё официально», «легально», «стабильно», «прозрачный договор»

    ==================================================
    🟩 ИСКЛЮЧЕНИЯ → NOT_SPAM  
    (любой подпункт перекрывает триггеры выше)
    --------------------------------------------------
    ✔️ **Технический контент**  
      • Названия/параметры ИИ-моделей: «Llama-3», «17B-16E-Instruct», «Llama-4-Scout», «квантование», «CUDA», «RAG», «эмбеддинги»

    ✔️ **Мета-контекст о самом антиспам-боте**  
      • Фразы: «бот удалил», «ложное срабатывание», «тестирование бота», «локальная LLM», «антиспам-бот»  
      • Упоминания восстановления: «переформулировать пост», «восстановить сообщение»  
      • **Telegram-ссылки** разрешены, если рядом есть ≥1 тех-ключ: («LLM», «модель», «антиспам», «тестирование», «бот»)

    ✔️ **Safelist для мета-сообщений о боте** (v1.8)  
      • Сообщение содержит «тестирование» **и** «бот» **и** одно из:  
        («LLM», «антиспам», «анти-спам», «восстановить», «переформулировать», «локальная модель») → NOT_SPAM

    ✔️ **Короткие вопросы/отзывы**  
      • Любые вопросы ≤10 слов с «?», без денежных терминов (даже при наличии триггеров)  
      • Отзывы ≤15 слов без денег и призывов («Интересная модель, нужно больше тестов.»)  
      • Вопросы о работе системы («а бот удаляет все сообщения?», «можно пояснить?»)  
      • Тех-вопросы с ключевыми словами: «модель», «бот», «фильтр», «спам»

    ==================================================
    🟡 КРИТИЧЕСКИЕ ОБНОВЛЕНИЯ (v1.8)
    --------------------------------------------------
    ❌ **Ужесточения «денежный + призыв»**  
      • **Любая** денежная единица (символ «$», слова «доллар», «USD», «баксов», «руб», «рублей»)  
        в той же строке с призывом («пиши», «пишите», «напиши», «+», «плюс», «лс», «л/с», «личку», «личке», «личные») → SPAM  
      • Денежная единица + «в час», «в день», «в неделю», «в месяц», «в сутки» → SPAM  
      • Слова «доход», «заработок», «зарабатывай» **вместе** с любым призывом к контакту → SPAM

    💚 **Не изменяется:** все safelist-правила выше (тех-обсуждение, мета-контекст).

    ==================================================
    ⚖️ РЕШАЮЩИЕ ПРАВИЛА
    --------------------------------------------------
    1. SPAM, если выполняется **любое** из:  
       • (A и B) + (C или D)  
       • Ссылка (URL/ник) + денежные термины  
       • Призыв к действию + лимит времени  
       • Правила ужесточения v1.8

    2. NOT_SPAM, если выполняется **хотя бы одно**:  
       • Соответствует любому пункту «Исключения»  
       • Технический контент явно присутствует и перекрывает триггеры  
       • Вопросы ≤10 слов с «?» без денег (даже при наличии других триггеров)

    3. **Особые случаи:**  
       • Обфускация призыва («в_ЛС», «л/с») трактуется как призыв  
       • Обсуждение ложных срабатываний всегда NOT_SPAM  
       • Комбинация «модель» + «тест» → автоматически NOT_SPAM

    ==================================================
    Сообщение: {{question}}
    Ответ:
    """

    try:
        # Инициализация локальной языковой модели с параметрами
        # local_llm = "llama3.2:3b-instruct-fp16"
        # local_llm = "deepseek-r1:14b"
        llm = ChatOllama(model=LOCAL_LLM, temperature=0)

        # Формирование запроса для LLM
        # print(f'text={topic}')
        prompt_formatted = prompt.format(question=topic)
        # Отправка запроса (сформированного промпта) в модель и получение ответа
        generation = llm.invoke([HumanMessage(content=prompt_formatted)])
        model_response = generation.content
        print(f'model_response={model_response}')
        print(type(model_response))


        return model_response == "SPAM"
    except Exception as e:
        logger.error(f"Ошибка при проверке на спам: {e}")
        return False