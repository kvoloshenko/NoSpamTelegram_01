import logging
from dotenv import load_dotenv
import os
from langchain_ollama import ChatOllama
from langchain_core.messages import HumanMessage

load_dotenv()

LOCAL_LLM = os.getenv('LOCAL_LLM')
print(f'LOCAL_LLM ={LOCAL_LLM }')

logger = logging.getLogger(__name__)

async def check_spam(topic: str) -> bool:
    prompt = f"""
    Ты — антиспам-фильтр Telegram. Отвечай строго SPAM или NOT_SPAM.  
    Метка SPAM ставится при малейших признаках «быстрых денег», если сообщение не подпадает под исключения.

    ==================================================
    🟥 КРИТЕРИИ СПАМА  
    (*достаточно ≥ 1 Core-триггера **и** ≥ 1 Secondary-триггера*)
    --------------------------------------------------
    **Core-триггеры (A–B, обязательна как минимум одна категория):**

    A. ДЕНЕЖНЫЕ ОБЕЩАНИЯ  
      • Чёткие суммы / проценты: «$150», «80% прибыли», «50/50»  
      • Обещания дохода даже без цифр: «гарантированный доход», «пассивно», «без вложений»  
      • Схемы: «модель X/Y», «партнёрка», «сопровождение», «без риска»

    B. ПРИЗЫВ К КОНТАКТУ / ДЕЙСТВИЮ  
      • «Напиши», «пиши», «пишите», «в личку», «в ЛС», «+ в чат»  
      • Прямые ссылки на контакт / ник / бота

    **Secondary-триггеры (C–D, необходим хотя бы один):**

    C. ЛИМИТИРОВАНИЕ  
      • «Только N человек», «2 места», «последние места»  
      • Срочность: «до конца дня», «быстрый старт», «сегодня»

    D. МАНИПУЛЯЦИИ / ПСЕВДО-ЛЕГАЛЬНОСТЬ  
      • «Ничего не теряете», «без обязательств»  
      • «Всё официально», «легально», «стабильно», «прозрачный договор»

    ==================================================
    🟩 ИСКЛЮЧЕНИЯ → NOT_SPAM  
    (любой подпункт перекрывает триггеры выше)
    --------------------------------------------------
    ✔️ **Технический контент**  
      • Названия/параметры ИИ: «Llama-3», «17B-16E-Instruct», «RAG», «эмбеддинги», «vector store», «prompt», «температура», «чанки», «база данных», «код», «документация»  
      • Сервисы/платформы: «salebot», «Telegram API», «конструктор ботов»  
      • Тех-процессы: «поиск по векторной базе», «восстановление сообщений», «тестирование модели»

    ✔️ **Мета-контекст о боте**  
      • Фразы: «бот удалил», «ложное срабатывание», «тестирование бота», «локальная LLM», «антиспам-фильтр»  
      • Упоминания восстановления: «переформулировать пост», «восстановить сообщение»  
      • **Telegram-ссылки** разрешены, если рядом есть ≥1 тех-термин: («LLM», «модель», «антиспам», «тестирование», «бот»)

    ✔️ **Safelist для мета-сообщений**  
      • Содержит «тестирование» **и** «бот» **и** одно из:  
        («LLM», «антиспам», «анти-спам», «восстановить», «переформулировать», «локальная модель») → NOT_SPAM

    ✔️ **Короткие вопросы/отзывы**  
      • Вопросы ≤15 слов с «?» без денег (даже при наличии триггеров):  
        «Можно пояснить?», «а бот удаляет все сообщения?», «подскажите как можно отследить?»  
      • Отзывы ≤20 слов без денег/призывов:  
        «Интересная модель. Нужно больше тестов», «под RAG имеете ввиду vector store?»  
      • Тех-вопросы с ключевыми словами:  
        «модель», «бот», «фильтр», «спам», «код», «prompt», «RAG»

    ==================================================
    🟡 КРИТИЧЕСКИЕ ОБНОВЛЕНИЯ (v2.0)
    --------------------------------------------------
    ❌ **Ужесточения «денежный + призыв»**  
      • Любая денежная единица ($, «доллар», «баксов») + призыв («пиши», «+», «лс») → SPAM  
      • Денежная единица + период («в день», «в неделю») → SPAM  
      • «доход»/«заработок» + призыв к контакту → SPAM

    💚 **Не изменяется:** все исключения для тех-контента и мета-обсуждений.

    ==================================================
    ⚖️ РЕШАЮЩИЕ ПРАВИЛА
    --------------------------------------------------
    1. SPAM, если выполняется **любое** из:  
       • (A + B) + (C или D)  
       • Ссылка + денежные термины  
       • Призыв + лимит времени  
       • Правила ужесточения v2.0

    2. NOT_SPAM, если выполняется **хотя бы одно**:  
       • Соответствует исключениям (тех-контент, мета-контекст, короткие вопросы)  
       • Обсуждение работы ИИ/ботов без денежных триггеров  
       • Сообщения с тех-терминами, даже при наличии других триггеров

    3. **Особые случаи:**  
       • Обфускация («в_ЛС», «л/с») → призыв  
       • Ложные срабатывания → NOT_SPAM  
       • «модель» + «тест» → автоматически NOT_SPAM

    ==================================================
    Сообщение: {{question}}
    Ответ:
    """


    try:
        # Инициализация локальной языковой модели с параметрами
        # local_llm = "llama3.2:3b-instruct-fp16"
        # local_llm = "deepseek-r1:14b"
        llm = ChatOllama(model=LOCAL_LLM, temperature=0)

        # Формирование запроса для LLM
        # print(f'text={topic}')
        prompt_formatted = prompt.format(question=topic)
        # Отправка запроса (сформированного промпта) в модель и получение ответа
        generation = llm.invoke([HumanMessage(content=prompt_formatted)])
        model_response = generation.content
        print(f'model_response={model_response}')
        print(type(model_response))


        return model_response == "SPAM"
    except Exception as e:
        logger.error(f"Ошибка при проверке на спам: {e}")
        return False